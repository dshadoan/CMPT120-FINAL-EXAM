# this imports our library that we made to make reading and writing into the file containing the account information easier
import userDataManager

# this function verifies the user by checking that the pin matches the card number
def verifyUser(userData, cardNumber, pin):
    # if the card number exists in the user data then it...
    if cardNumber in userData:
        # checks that the stored pin matches with the one given
        storedPin = userData[cardNumber][0]
        # if it does match, then it returns True and continues through the main function
        if storedPin == pin:
            return True
    # if not, then it returns false and ends the program
    return False

# this function is used if the requested action is to withdraw
def withdraw(userData, cardNumber):
    amount = float(input("Type in the amount you like to withdraw: "))
    # Make sure withdrawal amount is less than or equal to the amount in the account using if/else statement
    # If the amount is less than or equal to balance in account, subtract the withdrawal amount from
    # original balance of the account
    # Then print a statement to let the user know it was successful and show the updated balance of the account
    if amount <= userData[cardNumber][1]:
        userData[cardNumber] = (userData[cardNumber][0], userData[cardNumber][1] - amount)
        print(f"Withdrawal complete. Remaining balance: {userData[cardNumber][1]}")
    # If the withdrawal exceeded the amount in the account print a failure statement
    else:
        print("Failed withdrawal, insufficient funds.")

# this function is used if the requested action is to deposit

def deposit(userData, cardNumber):
    # Ask the user for the amount they want to deposit
    amount = float(input("Type in the amount you would like to deposit: "))
    # Add (+) the deposited money to the users account
    # Print a statement to let the user know it was successful and show the updated balance of the account
    userData[cardNumber] = (userData[cardNumber][0], userData[cardNumber][1] + amount)
    print(f"Deposit complete. Current Balance: {userData[cardNumber][1]}")

# this function is used to transfer money from one account to another
def transferFunction(userData, donorCardNumber):
    # request the card number, so we know which account it goes to
    recipientsCardNumber = input("Enter the recipient's card number: ")
    # if this card number doesn't exist it prints that it is invalid
    if recipientsCardNumber not in userData:
        print("Recipient's account invalid.")
    # otherwise it continues with the transfer
    else:
        # now we ask how much is being transferred
        transferAmount = float(input("Enter transfer amount: "))
        # we have to check if there is enough money in the donor account to transfer
        # if the amount is insufficient, it prints that
        if transferAmount > userData[donorCardNumber][1]:
            print("Transfer rejected due to insufficient funds.")
        # otherwise, it continues with the transfer
        else:
            # the new information for the donor card data is the transferAmount subtracted from the original amount
            userData[donorCardNumber] = (userData[donorCardNumber][0], userData[donorCardNumber][1] - transferAmount)
            # the new information for the recipient card data is the transferAmount added to the original amount
            userData[recipientsCardNumber] = (userData[recipientsCardNumber][0], userData[recipientsCardNumber][1] + transferAmount)
            # not only does it change it in the file, but prints it directly to the user when selection 4 is adjusted
            print(f"Transfer was successful. You now have {userData[donorCardNumber][1]}")

# the main function asks all the questions and directs us to the proper function based on the user's answers
def main():
    # first we assign a variable to the file that all the card information is stored
    userDataFile = "userData.txt"
    # this is where we connect our library to the program so that the information given
    # (i.e. amount being withdrawn, deposited, and/or transferred)
    # can be changed in the file itself
    userData = userDataManager.loadUserData(userDataFile)

    # while true, i.e. the pin-number matches the account number, which was verified in the verifyUser function
    while True:
        # prints an intro so we know what this program does
        print("Hello. Welcome to the ATM.")
        # request account number so we know which account to reach
        cardNumber = input("Please input your account number attached to your debit card: ")
        # request pin-number to check if it matches the card number
        pin = input("Please enter your 4-digit pin number attached to your account: ")

        # if the function that verifies the user is true, then access is granted
        if verifyUser(userData, cardNumber, pin):
            print("Information Verified. Access Granted.")

            # as long as this remains true
            while True:
                # we ask which action is being requested
                print("What action would you like to perform?\n1. Withdraw\n2. Deposit\n3. Transfer\n4. Log Out")
                action = input("Enter the number for your choice (1, 2, 3, or 4): ")
                # depending on the answer, each of these if statements direct the user to the proper function
                if action == "1":
                    withdraw(userData, cardNumber)
                elif action == "2":
                    deposit(userData, cardNumber)
                elif action == "3":
                    transferFunction(userData, cardNumber)
                # this one ends the program
                elif action == "4":
                    # is nice and adds departing words
                    print("Have a good day.")
                    # this adjusts all the user input into the userData file to be changed
                    userDataManager.writeUserData(userDataFile, userData)
                    # exits from program and userData file
                    exit()
                # if none of the 4 options were chosen, it requests again
                else:
                    print("Please type in a valid choice of 1, 2, 3, or 4.")
        # if the pin did not match the account number it lets us knows, and ends the program
        else:
            print("Verification failed.")

# calls main function
main()

